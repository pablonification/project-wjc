name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  NODE_VERSION: '18'

jobs:
  lint:
    name: Lint & Type Check
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci --legacy-peer-deps
      
      - name: Run ESLint
        run: npm run lint
      
      - name: Run TypeScript type check
        run: npm run type-check

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    
    services:
      mongodb:
        image: mongo:7.0
        env:
          MONGO_INITDB_ROOT_USERNAME: root
          MONGO_INITDB_ROOT_PASSWORD: test
        ports:
          - 27017:27017
        options: >-
          --health-cmd "mongosh --eval 'db.adminCommand(\"ping\")'"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci --legacy-peer-deps
      
      - name: Run tests with coverage
        run: npm run test:coverage
        env:
          MONGODB_URI: mongodb://root:test@localhost:27017/test?authSource=admin
          JWT_SECRET: test-jwt-secret
          DATOCMS_READONLY_TOKEN: test-token
      
      - name: Upload coverage reports
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage/lcov.info
          fail_ci_if_error: false

  build:
    name: Build Application
    runs-on: ubuntu-latest
    needs: [lint, test]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci --legacy-peer-deps
      
      - name: Build application
        run: npm run build
        env:
          NEXT_PUBLIC_APP_URL: https://project-wjc.vercel.app
      
      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-artifacts
          path: |
            .next/
            !.next/cache/
          retention-days: 1

  security:
    name: Security Audit
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci --legacy-peer-deps
      
      - name: Run security audit
        run: npm audit --audit-level=moderate
      
      - name: Check for vulnerabilities
        run: npx audit-ci --moderate

  deploy-staging:
    name: Deploy to Staging
    runs-on: ubuntu-latest
    needs: [build]
    if: github.ref == 'refs/heads/develop'
    
    environment:
      name: staging
      url: https://project-wjc-staging.vercel.app
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Deploy to Vercel (Staging)
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          vercel-args: '--env MONGODB_URI="${{ secrets.MONGODB_URI_STAGING }}" --env DATOCMS_READONLY_TOKEN="${{ secrets.DATOCMS_READONLY_TOKEN }}" --env JWT_SECRET="${{ secrets.JWT_SECRET }}" --env SMTP_HOST="${{ secrets.SMTP_HOST }}" --env SMTP_PORT="${{ secrets.SMTP_PORT }}" --env SMTP_USER="${{ secrets.SMTP_USER }}" --env SMTP_PASS="${{ secrets.SMTP_PASS }}"'
          scope: ${{ secrets.VERCEL_ORG_ID }}

  deploy-production:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: [build, security]
    if: github.ref == 'refs/heads/main'
    
    environment:
      name: production
      url: https://project-wjc.vercel.app
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: build-artifacts
      
      - name: Deploy to Vercel (Production)
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          vercel-args: '--prod --env MONGODB_URI="${{ secrets.MONGODB_URI_PRODUCTION }}" --env DATOCMS_READONLY_TOKEN="${{ secrets.DATOCMS_READONLY_TOKEN }}" --env JWT_SECRET="${{ secrets.JWT_SECRET }}" --env SMTP_HOST="${{ secrets.SMTP_HOST }}" --env SMTP_PORT="${{ secrets.SMTP_PORT }}" --env SMTP_USER="${{ secrets.SMTP_USER }}" --env SMTP_PASS="${{ secrets.SMTP_PASS }}" --env DATOCMS_WEBHOOK_SECRET="${{ secrets.DATOCMS_WEBHOOK_SECRET }}"'
          scope: ${{ secrets.VERCEL_ORG_ID }}
      
      - name: Sync DatoCMS to MongoDB
        run: |
          npm ci --legacy-peer-deps
          npm run sync:dato-to-mongo
        env:
          MONGODB_URI: ${{ secrets.MONGODB_URI_PRODUCTION }}
          DATOCMS_READONLY_TOKEN: ${{ secrets.DATOCMS_READONLY_TOKEN }}

  notify:
    name: Notify Deployment
    runs-on: ubuntu-latest
    needs: [deploy-production]
    if: always() && github.ref == 'refs/heads/main'
    
    steps:
      - name: Notify Success
        if: needs.deploy-production.result == 'success'
        run: |
          echo "üöÄ Production deployment successful!"
          echo "URL: https://project-wjc.vercel.app"
      
      - name: Notify Failure
        if: needs.deploy-production.result == 'failure'
        run: |
          echo "‚ùå Production deployment failed!"
          exit 1